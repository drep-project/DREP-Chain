// Code generated by protoc-gen-go. DO NOT EDIT.
// source: consensus.proto

package bean

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Word struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Word) Reset()         { *m = Word{} }
func (m *Word) String() string { return proto.CompactTextString(m) }
func (*Word) ProtoMessage()    {}
func (*Word) Descriptor() ([]byte, []int) {
	return fileDescriptor_consensus_d9e555a10102398c, []int{0}
}
func (m *Word) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Word.Unmarshal(m, b)
}
func (m *Word) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Word.Marshal(b, m, deterministic)
}
func (dst *Word) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Word.Merge(dst, src)
}
func (m *Word) XXX_Size() int {
	return xxx_messageInfo_Word.Size(m)
}
func (m *Word) XXX_DiscardUnknown() {
	xxx_messageInfo_Word.DiscardUnknown(m)
}

var xxx_messageInfo_Word proto.InternalMessageInfo

func (m *Word) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type Ticket struct {
	PubKey               *Point     `protobuf:"bytes,1,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	SigOfWord            *Signature `protobuf:"bytes,2,opt,name=sig_of_word,json=sigOfWord,proto3" json:"sig_of_word,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Ticket) Reset()         { *m = Ticket{} }
func (m *Ticket) String() string { return proto.CompactTextString(m) }
func (*Ticket) ProtoMessage()    {}
func (*Ticket) Descriptor() ([]byte, []int) {
	return fileDescriptor_consensus_d9e555a10102398c, []int{1}
}
func (m *Ticket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ticket.Unmarshal(m, b)
}
func (m *Ticket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ticket.Marshal(b, m, deterministic)
}
func (dst *Ticket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ticket.Merge(dst, src)
}
func (m *Ticket) XXX_Size() int {
	return xxx_messageInfo_Ticket.Size(m)
}
func (m *Ticket) XXX_DiscardUnknown() {
	xxx_messageInfo_Ticket.DiscardUnknown(m)
}

var xxx_messageInfo_Ticket proto.InternalMessageInfo

func (m *Ticket) GetPubKey() *Point {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func (m *Ticket) GetSigOfWord() *Signature {
	if m != nil {
		return m.SigOfWord
	}
	return nil
}

type Commitment struct {
	PubKey               *Point   `protobuf:"bytes,1,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	Q                    *Point   `protobuf:"bytes,2,opt,name=q,proto3" json:"q,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Commitment) Reset()         { *m = Commitment{} }
func (m *Commitment) String() string { return proto.CompactTextString(m) }
func (*Commitment) ProtoMessage()    {}
func (*Commitment) Descriptor() ([]byte, []int) {
	return fileDescriptor_consensus_d9e555a10102398c, []int{2}
}
func (m *Commitment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Commitment.Unmarshal(m, b)
}
func (m *Commitment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Commitment.Marshal(b, m, deterministic)
}
func (dst *Commitment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Commitment.Merge(dst, src)
}
func (m *Commitment) XXX_Size() int {
	return xxx_messageInfo_Commitment.Size(m)
}
func (m *Commitment) XXX_DiscardUnknown() {
	xxx_messageInfo_Commitment.DiscardUnknown(m)
}

var xxx_messageInfo_Commitment proto.InternalMessageInfo

func (m *Commitment) GetPubKey() *Point {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func (m *Commitment) GetQ() *Point {
	if m != nil {
		return m.Q
	}
	return nil
}

type Challenge struct {
	GroupPubKey          *Point   `protobuf:"bytes,1,opt,name=group_pub_key,json=groupPubKey,proto3" json:"group_pub_key,omitempty"`
	GroupQ               *Point   `protobuf:"bytes,2,opt,name=group_q,json=groupQ,proto3" json:"group_q,omitempty"`
	Msg                  []byte   `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	R                    []byte   `protobuf:"bytes,4,opt,name=r,proto3" json:"r,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Challenge) Reset()         { *m = Challenge{} }
func (m *Challenge) String() string { return proto.CompactTextString(m) }
func (*Challenge) ProtoMessage()    {}
func (*Challenge) Descriptor() ([]byte, []int) {
	return fileDescriptor_consensus_d9e555a10102398c, []int{3}
}
func (m *Challenge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Challenge.Unmarshal(m, b)
}
func (m *Challenge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Challenge.Marshal(b, m, deterministic)
}
func (dst *Challenge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Challenge.Merge(dst, src)
}
func (m *Challenge) XXX_Size() int {
	return xxx_messageInfo_Challenge.Size(m)
}
func (m *Challenge) XXX_DiscardUnknown() {
	xxx_messageInfo_Challenge.DiscardUnknown(m)
}

var xxx_messageInfo_Challenge proto.InternalMessageInfo

func (m *Challenge) GetGroupPubKey() *Point {
	if m != nil {
		return m.GroupPubKey
	}
	return nil
}

func (m *Challenge) GetGroupQ() *Point {
	if m != nil {
		return m.GroupQ
	}
	return nil
}

func (m *Challenge) GetMsg() []byte {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *Challenge) GetR() []byte {
	if m != nil {
		return m.R
	}
	return nil
}

type Response struct {
	PubKey               *Point   `protobuf:"bytes,1,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	S                    []byte   `protobuf:"bytes,2,opt,name=s,proto3" json:"s,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_consensus_d9e555a10102398c, []int{4}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetPubKey() *Point {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func (m *Response) GetS() []byte {
	if m != nil {
		return m.S
	}
	return nil
}

func init() {
	proto.RegisterType((*Word)(nil), "bean.word")
	proto.RegisterType((*Ticket)(nil), "bean.ticket")
	proto.RegisterType((*Commitment)(nil), "bean.commitment")
	proto.RegisterType((*Challenge)(nil), "bean.challenge")
	proto.RegisterType((*Response)(nil), "bean.response")
}

func init() { proto.RegisterFile("consensus.proto", fileDescriptor_consensus_d9e555a10102398c) }

var fileDescriptor_consensus_d9e555a10102398c = []byte{
	// 264 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x65, 0x1a, 0xa5, 0xe4, 0x12, 0x54, 0xe4, 0x29, 0x30, 0x55, 0x51, 0x87, 0x4e, 0xa9,
	0x04, 0x3b, 0x7f, 0x00, 0x21, 0x20, 0x0b, 0x63, 0x94, 0xa4, 0x57, 0x63, 0xa5, 0xb1, 0x5d, 0x9f,
	0x2d, 0x94, 0x95, 0x5f, 0x8e, 0xe2, 0xc0, 0x80, 0x84, 0x50, 0x37, 0xdb, 0xef, 0xf9, 0x7b, 0xba,
	0x77, 0xb0, 0xea, 0xb4, 0x22, 0x54, 0xe4, 0xa9, 0x34, 0x56, 0x3b, 0xcd, 0xa3, 0x16, 0x1b, 0x75,
	0x9b, 0xf4, 0x38, 0xce, 0x0f, 0x45, 0x0e, 0xd1, 0x87, 0xb6, 0x7b, 0x7e, 0x0d, 0x8b, 0x81, 0x44,
	0xce, 0xd6, 0x6c, 0x9b, 0x54, 0xd3, 0xb1, 0xa8, 0x21, 0x76, 0xb2, 0xeb, 0xd1, 0xf1, 0x0d, 0x2c,
	0x8d, 0x6f, 0xeb, 0x1e, 0xc7, 0xa0, 0xa7, 0x77, 0x69, 0x39, 0x61, 0x4a, 0xa3, 0xa5, 0x72, 0x55,
	0x6c, 0x7c, 0xfb, 0x88, 0x23, 0xdf, 0x41, 0x4a, 0x52, 0xd4, 0xfa, 0x50, 0x4f, 0xc0, 0xfc, 0x22,
	0x38, 0x57, 0xb3, 0x93, 0xa4, 0x50, 0x8d, 0xf3, 0x16, 0xab, 0x84, 0xa4, 0x78, 0x3e, 0xbc, 0x69,
	0xbb, 0x2f, 0x9e, 0x00, 0x3a, 0x3d, 0x0c, 0xd2, 0x0d, 0xa8, 0xce, 0x0d, 0xb9, 0x01, 0x76, 0xfa,
	0x46, 0xff, 0xd2, 0xd9, 0xa9, 0xf8, 0x64, 0x90, 0x74, 0xef, 0xcd, 0xf1, 0x88, 0x4a, 0x20, 0xdf,
	0xc1, 0x95, 0xb0, 0xda, 0x9b, 0xfa, 0x1f, 0x68, 0x1a, 0x1c, 0x2f, 0x33, 0x79, 0x03, 0xcb, 0xf9,
	0xc3, 0x9f, 0xfc, 0x38, 0x68, 0xaf, 0x3f, 0x35, 0x2d, 0xd6, 0x6c, 0x9b, 0x85, 0x9a, 0x78, 0x06,
	0xcc, 0xe6, 0x51, 0xb8, 0x33, 0x5b, 0x3c, 0xc0, 0xa5, 0x45, 0x32, 0x53, 0xeb, 0x67, 0x4e, 0x94,
	0x01, 0xa3, 0x90, 0x98, 0x55, 0x8c, 0xda, 0x38, 0x6c, 0xe5, 0xfe, 0x2b, 0x00, 0x00, 0xff, 0xff,
	0xd1, 0x73, 0x51, 0xae, 0xb9, 0x01, 0x00, 0x00,
}
