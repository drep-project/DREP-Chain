// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bean/node.proto

package bean

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import mycrypto "BlockChainTest/mycrypto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PeerInfo struct {
	Pk                   *mycrypto.Point `protobuf:"bytes,1,opt,name=pk,proto3" json:"pk,omitempty"`
	Ip                   string          `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Port                 int32           `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PeerInfo) Reset()         { *m = PeerInfo{} }
func (m *PeerInfo) String() string { return proto.CompactTextString(m) }
func (*PeerInfo) ProtoMessage()    {}
func (*PeerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_node_1348d44d638d5186, []int{0}
}
func (m *PeerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerInfo.Unmarshal(m, b)
}
func (m *PeerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerInfo.Marshal(b, m, deterministic)
}
func (dst *PeerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerInfo.Merge(dst, src)
}
func (m *PeerInfo) XXX_Size() int {
	return xxx_messageInfo_PeerInfo.Size(m)
}
func (m *PeerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PeerInfo proto.InternalMessageInfo

func (m *PeerInfo) GetPk() *mycrypto.Point {
	if m != nil {
		return m.Pk
	}
	return nil
}

func (m *PeerInfo) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *PeerInfo) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type PeerInfoList struct {
	List                 []*PeerInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PeerInfoList) Reset()         { *m = PeerInfoList{} }
func (m *PeerInfoList) String() string { return proto.CompactTextString(m) }
func (*PeerInfoList) ProtoMessage()    {}
func (*PeerInfoList) Descriptor() ([]byte, []int) {
	return fileDescriptor_node_1348d44d638d5186, []int{1}
}
func (m *PeerInfoList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerInfoList.Unmarshal(m, b)
}
func (m *PeerInfoList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerInfoList.Marshal(b, m, deterministic)
}
func (dst *PeerInfoList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerInfoList.Merge(dst, src)
}
func (m *PeerInfoList) XXX_Size() int {
	return xxx_messageInfo_PeerInfoList.Size(m)
}
func (m *PeerInfoList) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerInfoList.DiscardUnknown(m)
}

var xxx_messageInfo_PeerInfoList proto.InternalMessageInfo

func (m *PeerInfoList) GetList() []*PeerInfo {
	if m != nil {
		return m.List
	}
	return nil
}

func init() {
	proto.RegisterType((*PeerInfo)(nil), "bean.peer_info")
	proto.RegisterType((*PeerInfoList)(nil), "bean.peer_info_list")
}

func init() { proto.RegisterFile("bean/node.proto", fileDescriptor_node_1348d44d638d5186) }

var fileDescriptor_node_1348d44d638d5186 = []byte{
	// 166 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0x8e, 0x41, 0x0a, 0xc2, 0x30,
	0x10, 0x45, 0x49, 0x5a, 0x85, 0x8e, 0xd0, 0xc2, 0xac, 0x82, 0x1b, 0x43, 0xdd, 0x74, 0x95, 0x82,
	0xe2, 0x3d, 0x24, 0x17, 0x28, 0x56, 0x23, 0x84, 0x6a, 0x66, 0x88, 0xd9, 0xf4, 0xf6, 0xd2, 0x88,
	0x5d, 0xcd, 0xf0, 0xff, 0xe7, 0xf1, 0xa0, 0x19, 0xdd, 0x2d, 0xf4, 0x81, 0x1e, 0xce, 0x70, 0xa4,
	0x44, 0x58, 0x2e, 0xc1, 0x1e, 0xdf, 0xf3, 0x3d, 0xce, 0x9c, 0xa8, 0x9f, 0xdc, 0xfc, 0x6b, 0xda,
	0x2b, 0x54, 0xec, 0x5c, 0x1c, 0x7c, 0x78, 0x12, 0x1e, 0x40, 0xf2, 0xa4, 0x84, 0x16, 0xdd, 0xee,
	0xd4, 0x98, 0xff, 0xda, 0x30, 0xf9, 0x90, 0xac, 0xe4, 0x09, 0x6b, 0x90, 0x9e, 0x95, 0xd4, 0xa2,
	0xab, 0xac, 0xf4, 0x8c, 0x08, 0x25, 0x53, 0x4c, 0xaa, 0xd0, 0xa2, 0xdb, 0xd8, 0xfc, 0xb7, 0x17,
	0xa8, 0x57, 0xe2, 0xf0, 0xf2, 0x9f, 0x84, 0x47, 0x28, 0x97, 0xab, 0x84, 0x2e, 0x32, 0x78, 0x91,
	0x31, 0xeb, 0xc6, 0xe6, 0x72, 0xdc, 0x66, 0x9f, 0xf3, 0x37, 0x00, 0x00, 0xff, 0xff, 0x20, 0x9b,
	0xa9, 0x0e, 0xbc, 0x00, 0x00, 0x00,
}
