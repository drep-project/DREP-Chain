// Code generated by protoc-gen-go. DO NOT EDIT.
// source: others.proto

package bean

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Peer struct {
	Pk                   *Point   `protobuf:"bytes,1,opt,name=pk,proto3" json:"pk,omitempty"`
	Ip                   string   `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Port                 int32    `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Peer) Reset()         { *m = Peer{} }
func (m *Peer) String() string { return proto.CompactTextString(m) }
func (*Peer) ProtoMessage()    {}
func (*Peer) Descriptor() ([]byte, []int) {
	return fileDescriptor_others_d9757c009e0963c1, []int{0}
}
func (m *Peer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Peer.Unmarshal(m, b)
}
func (m *Peer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Peer.Marshal(b, m, deterministic)
}
func (dst *Peer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Peer.Merge(dst, src)
}
func (m *Peer) XXX_Size() int {
	return xxx_messageInfo_Peer.Size(m)
}
func (m *Peer) XXX_DiscardUnknown() {
	xxx_messageInfo_Peer.DiscardUnknown(m)
}

var xxx_messageInfo_Peer proto.InternalMessageInfo

func (m *Peer) GetPk() *Point {
	if m != nil {
		return m.Pk
	}
	return nil
}

func (m *Peer) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Peer) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type PeerList struct {
	List                 []*Peer  `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeerList) Reset()         { *m = PeerList{} }
func (m *PeerList) String() string { return proto.CompactTextString(m) }
func (*PeerList) ProtoMessage()    {}
func (*PeerList) Descriptor() ([]byte, []int) {
	return fileDescriptor_others_d9757c009e0963c1, []int{1}
}
func (m *PeerList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerList.Unmarshal(m, b)
}
func (m *PeerList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerList.Marshal(b, m, deterministic)
}
func (dst *PeerList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerList.Merge(dst, src)
}
func (m *PeerList) XXX_Size() int {
	return xxx_messageInfo_PeerList.Size(m)
}
func (m *PeerList) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerList.DiscardUnknown(m)
}

var xxx_messageInfo_PeerList proto.InternalMessageInfo

func (m *PeerList) GetList() []*Peer {
	if m != nil {
		return m.List
	}
	return nil
}

func init() {
	proto.RegisterType((*Peer)(nil), "bean.peer")
	proto.RegisterType((*PeerList)(nil), "bean.peer_list")
}

func init() { proto.RegisterFile("others.proto", fileDescriptor_others_d9757c009e0963c1) }

var fileDescriptor_others_d9757c009e0963c1 = []byte{
	// 154 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x2c, 0x8d, 0xc1, 0x0a, 0x02, 0x21,
	0x14, 0x45, 0xd1, 0xb1, 0x60, 0x9e, 0xd1, 0xe2, 0xad, 0xa4, 0x20, 0x64, 0x56, 0x42, 0xe0, 0x62,
	0xfa, 0x88, 0xf6, 0xfe, 0x40, 0x34, 0xf0, 0x20, 0x31, 0xc6, 0x87, 0xe3, 0xa6, 0xbf, 0x0f, 0xad,
	0xd5, 0xbd, 0x1c, 0x2e, 0xe7, 0xc2, 0x21, 0xd7, 0x17, 0x95, 0xcd, 0x73, 0xc9, 0x35, 0xa3, 0x5a,
	0xe8, 0xb9, 0x9e, 0xc6, 0x44, 0x9f, 0x1f, 0x98, 0xee, 0xa0, 0x98, 0xa8, 0xe0, 0x19, 0x24, 0x27,
	0x23, 0xac, 0x70, 0x7a, 0xd6, 0xbe, 0xad, 0x3c, 0xe7, 0xb8, 0xd6, 0x20, 0x39, 0xe1, 0x11, 0x64,
	0x64, 0x23, 0xad, 0x70, 0x63, 0x90, 0x91, 0x11, 0x41, 0x71, 0x2e, 0xd5, 0x0c, 0x56, 0xb8, 0x5d,
	0xe8, 0x7d, 0xba, 0xc2, 0xd8, 0x44, 0x8f, 0x77, 0xdc, 0x2a, 0x5e, 0x40, 0xb5, 0x34, 0xc2, 0x0e,
	0x4e, 0xcf, 0xf0, 0xf7, 0x11, 0x95, 0xd0, 0xf9, 0xb2, 0xef, 0xe7, 0xb7, 0x6f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x26, 0x64, 0x3d, 0x8d, 0x9d, 0x00, 0x00, 0x00,
}
