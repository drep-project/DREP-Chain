// Code generated by protoc-gen-go. DO NOT EDIT.
// source: type.proto

package common

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MessageHeader int32

const (
	MessageHeader_ACCOUNT      MessageHeader = 0
	MessageHeader_BLOCK_HEADER MessageHeader = 1
	MessageHeader_BLOCK_DATA   MessageHeader = 2
	MessageHeader_BLOCK        MessageHeader = 3
	MessageHeader_TRANSACTION  MessageHeader = 4
	MessageHeader_TIMESTAMP    MessageHeader = 5
	MessageHeader_POINT        MessageHeader = 6
	MessageHeader_PRIVATE_KEY  MessageHeader = 7
	MessageHeader_SIGNATURE    MessageHeader = 8
	MessageHeader_WORD         MessageHeader = 9
	MessageHeader_TICKET       MessageHeader = 10
	MessageHeader_COMMITMENT   MessageHeader = 11
	MessageHeader_CHALLENGE    MessageHeader = 12
	MessageHeader_RESPONSE     MessageHeader = 13
)

var MessageHeader_name = map[int32]string{
	0:  "ACCOUNT",
	1:  "BLOCK_HEADER",
	2:  "BLOCK_DATA",
	3:  "BLOCK",
	4:  "TRANSACTION",
	5:  "TIMESTAMP",
	6:  "POINT",
	7:  "PRIVATE_KEY",
	8:  "SIGNATURE",
	9:  "WORD",
	10: "TICKET",
	11: "COMMITMENT",
	12: "CHALLENGE",
	13: "RESPONSE",
}
var MessageHeader_value = map[string]int32{
	"ACCOUNT":      0,
	"BLOCK_HEADER": 1,
	"BLOCK_DATA":   2,
	"BLOCK":        3,
	"TRANSACTION":  4,
	"TIMESTAMP":    5,
	"POINT":        6,
	"PRIVATE_KEY":  7,
	"SIGNATURE":    8,
	"WORD":         9,
	"TICKET":       10,
	"COMMITMENT":   11,
	"CHALLENGE":    12,
	"RESPONSE":     13,
}

func (x MessageHeader) String() string {
	return proto.EnumName(MessageHeader_name, int32(x))
}
func (MessageHeader) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_type_51e89bab3b0b6283, []int{0}
}

type Serializable struct {
	Header               MessageHeader `protobuf:"varint,1,opt,name=header,proto3,enum=common.MessageHeader" json:"header,omitempty"`
	Body                 []byte        `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Serializable) Reset()         { *m = Serializable{} }
func (m *Serializable) String() string { return proto.CompactTextString(m) }
func (*Serializable) ProtoMessage()    {}
func (*Serializable) Descriptor() ([]byte, []int) {
	return fileDescriptor_type_51e89bab3b0b6283, []int{0}
}
func (m *Serializable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Serializable.Unmarshal(m, b)
}
func (m *Serializable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Serializable.Marshal(b, m, deterministic)
}
func (dst *Serializable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Serializable.Merge(dst, src)
}
func (m *Serializable) XXX_Size() int {
	return xxx_messageInfo_Serializable.Size(m)
}
func (m *Serializable) XXX_DiscardUnknown() {
	xxx_messageInfo_Serializable.DiscardUnknown(m)
}

var xxx_messageInfo_Serializable proto.InternalMessageInfo

func (m *Serializable) GetHeader() MessageHeader {
	if m != nil {
		return m.Header
	}
	return MessageHeader_ACCOUNT
}

func (m *Serializable) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

type Point struct {
	X                    []byte   `protobuf:"bytes,1,opt,name=x,proto3" json:"x,omitempty"`
	Y                    []byte   `protobuf:"bytes,2,opt,name=y,proto3" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Point) Reset()         { *m = Point{} }
func (m *Point) String() string { return proto.CompactTextString(m) }
func (*Point) ProtoMessage()    {}
func (*Point) Descriptor() ([]byte, []int) {
	return fileDescriptor_type_51e89bab3b0b6283, []int{1}
}
func (m *Point) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Point.Unmarshal(m, b)
}
func (m *Point) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Point.Marshal(b, m, deterministic)
}
func (dst *Point) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Point.Merge(dst, src)
}
func (m *Point) XXX_Size() int {
	return xxx_messageInfo_Point.Size(m)
}
func (m *Point) XXX_DiscardUnknown() {
	xxx_messageInfo_Point.DiscardUnknown(m)
}

var xxx_messageInfo_Point proto.InternalMessageInfo

func (m *Point) GetX() []byte {
	if m != nil {
		return m.X
	}
	return nil
}

func (m *Point) GetY() []byte {
	if m != nil {
		return m.Y
	}
	return nil
}

type PrivateKey struct {
	Prv                  []byte   `protobuf:"bytes,1,opt,name=prv,proto3" json:"prv,omitempty"`
	PubKey               *Point   `protobuf:"bytes,2,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrivateKey) Reset()         { *m = PrivateKey{} }
func (m *PrivateKey) String() string { return proto.CompactTextString(m) }
func (*PrivateKey) ProtoMessage()    {}
func (*PrivateKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_type_51e89bab3b0b6283, []int{2}
}
func (m *PrivateKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrivateKey.Unmarshal(m, b)
}
func (m *PrivateKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrivateKey.Marshal(b, m, deterministic)
}
func (dst *PrivateKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrivateKey.Merge(dst, src)
}
func (m *PrivateKey) XXX_Size() int {
	return xxx_messageInfo_PrivateKey.Size(m)
}
func (m *PrivateKey) XXX_DiscardUnknown() {
	xxx_messageInfo_PrivateKey.DiscardUnknown(m)
}

var xxx_messageInfo_PrivateKey proto.InternalMessageInfo

func (m *PrivateKey) GetPrv() []byte {
	if m != nil {
		return m.Prv
	}
	return nil
}

func (m *PrivateKey) GetPubKey() *Point {
	if m != nil {
		return m.PubKey
	}
	return nil
}

type Signature struct {
	R                    []byte   `protobuf:"bytes,1,opt,name=r,proto3" json:"r,omitempty"`
	S                    []byte   `protobuf:"bytes,2,opt,name=s,proto3" json:"s,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Signature) Reset()         { *m = Signature{} }
func (m *Signature) String() string { return proto.CompactTextString(m) }
func (*Signature) ProtoMessage()    {}
func (*Signature) Descriptor() ([]byte, []int) {
	return fileDescriptor_type_51e89bab3b0b6283, []int{3}
}
func (m *Signature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Signature.Unmarshal(m, b)
}
func (m *Signature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Signature.Marshal(b, m, deterministic)
}
func (dst *Signature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Signature.Merge(dst, src)
}
func (m *Signature) XXX_Size() int {
	return xxx_messageInfo_Signature.Size(m)
}
func (m *Signature) XXX_DiscardUnknown() {
	xxx_messageInfo_Signature.DiscardUnknown(m)
}

var xxx_messageInfo_Signature proto.InternalMessageInfo

func (m *Signature) GetR() []byte {
	if m != nil {
		return m.R
	}
	return nil
}

func (m *Signature) GetS() []byte {
	if m != nil {
		return m.S
	}
	return nil
}

type Word struct {
	Msg                  []byte   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Word) Reset()         { *m = Word{} }
func (m *Word) String() string { return proto.CompactTextString(m) }
func (*Word) ProtoMessage()    {}
func (*Word) Descriptor() ([]byte, []int) {
	return fileDescriptor_type_51e89bab3b0b6283, []int{4}
}
func (m *Word) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Word.Unmarshal(m, b)
}
func (m *Word) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Word.Marshal(b, m, deterministic)
}
func (dst *Word) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Word.Merge(dst, src)
}
func (m *Word) XXX_Size() int {
	return xxx_messageInfo_Word.Size(m)
}
func (m *Word) XXX_DiscardUnknown() {
	xxx_messageInfo_Word.DiscardUnknown(m)
}

var xxx_messageInfo_Word proto.InternalMessageInfo

func (m *Word) GetMsg() []byte {
	if m != nil {
		return m.Msg
	}
	return nil
}

type Ticket struct {
	PubKey               *Point     `protobuf:"bytes,1,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	SigOfWord            *Signature `protobuf:"bytes,2,opt,name=sig_of_word,json=sigOfWord,proto3" json:"sig_of_word,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Ticket) Reset()         { *m = Ticket{} }
func (m *Ticket) String() string { return proto.CompactTextString(m) }
func (*Ticket) ProtoMessage()    {}
func (*Ticket) Descriptor() ([]byte, []int) {
	return fileDescriptor_type_51e89bab3b0b6283, []int{5}
}
func (m *Ticket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ticket.Unmarshal(m, b)
}
func (m *Ticket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ticket.Marshal(b, m, deterministic)
}
func (dst *Ticket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ticket.Merge(dst, src)
}
func (m *Ticket) XXX_Size() int {
	return xxx_messageInfo_Ticket.Size(m)
}
func (m *Ticket) XXX_DiscardUnknown() {
	xxx_messageInfo_Ticket.DiscardUnknown(m)
}

var xxx_messageInfo_Ticket proto.InternalMessageInfo

func (m *Ticket) GetPubKey() *Point {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func (m *Ticket) GetSigOfWord() *Signature {
	if m != nil {
		return m.SigOfWord
	}
	return nil
}

type Commitment struct {
	PubKey               *Point   `protobuf:"bytes,1,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	Q                    *Point   `protobuf:"bytes,2,opt,name=q,proto3" json:"q,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Commitment) Reset()         { *m = Commitment{} }
func (m *Commitment) String() string { return proto.CompactTextString(m) }
func (*Commitment) ProtoMessage()    {}
func (*Commitment) Descriptor() ([]byte, []int) {
	return fileDescriptor_type_51e89bab3b0b6283, []int{6}
}
func (m *Commitment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Commitment.Unmarshal(m, b)
}
func (m *Commitment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Commitment.Marshal(b, m, deterministic)
}
func (dst *Commitment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Commitment.Merge(dst, src)
}
func (m *Commitment) XXX_Size() int {
	return xxx_messageInfo_Commitment.Size(m)
}
func (m *Commitment) XXX_DiscardUnknown() {
	xxx_messageInfo_Commitment.DiscardUnknown(m)
}

var xxx_messageInfo_Commitment proto.InternalMessageInfo

func (m *Commitment) GetPubKey() *Point {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func (m *Commitment) GetQ() *Point {
	if m != nil {
		return m.Q
	}
	return nil
}

type Challenge struct {
	GroupPubKey          *Point   `protobuf:"bytes,1,opt,name=group_pub_key,json=groupPubKey,proto3" json:"group_pub_key,omitempty"`
	GroupQ               *Point   `protobuf:"bytes,2,opt,name=group_q,json=groupQ,proto3" json:"group_q,omitempty"`
	Msg                  []byte   `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	R                    []byte   `protobuf:"bytes,4,opt,name=r,proto3" json:"r,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Challenge) Reset()         { *m = Challenge{} }
func (m *Challenge) String() string { return proto.CompactTextString(m) }
func (*Challenge) ProtoMessage()    {}
func (*Challenge) Descriptor() ([]byte, []int) {
	return fileDescriptor_type_51e89bab3b0b6283, []int{7}
}
func (m *Challenge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Challenge.Unmarshal(m, b)
}
func (m *Challenge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Challenge.Marshal(b, m, deterministic)
}
func (dst *Challenge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Challenge.Merge(dst, src)
}
func (m *Challenge) XXX_Size() int {
	return xxx_messageInfo_Challenge.Size(m)
}
func (m *Challenge) XXX_DiscardUnknown() {
	xxx_messageInfo_Challenge.DiscardUnknown(m)
}

var xxx_messageInfo_Challenge proto.InternalMessageInfo

func (m *Challenge) GetGroupPubKey() *Point {
	if m != nil {
		return m.GroupPubKey
	}
	return nil
}

func (m *Challenge) GetGroupQ() *Point {
	if m != nil {
		return m.GroupQ
	}
	return nil
}

func (m *Challenge) GetMsg() []byte {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *Challenge) GetR() []byte {
	if m != nil {
		return m.R
	}
	return nil
}

type Response struct {
	PubKey               *Point   `protobuf:"bytes,1,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	S                    []byte   `protobuf:"bytes,2,opt,name=s,proto3" json:"s,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_type_51e89bab3b0b6283, []int{8}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetPubKey() *Point {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func (m *Response) GetS() []byte {
	if m != nil {
		return m.S
	}
	return nil
}

type BlockHeader struct {
	Version              int32    `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	PreviousHash         []byte   `protobuf:"bytes,2,opt,name=previous_hash,json=previousHash,proto3" json:"previous_hash,omitempty"`
	GasLimit             []byte   `protobuf:"bytes,3,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	GasUsed              []byte   `protobuf:"bytes,4,opt,name=gas_used,json=gasUsed,proto3" json:"gas_used,omitempty"`
	Height               []byte   `protobuf:"bytes,5,opt,name=height,proto3" json:"height,omitempty"`
	Timestamp            int64    `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	MerkleRoot           []byte   `protobuf:"bytes,7,opt,name=merkle_root,json=merkleRoot,proto3" json:"merkle_root,omitempty"`
	TxHashes             [][]byte `protobuf:"bytes,8,rep,name=tx_hashes,json=txHashes,proto3" json:"tx_hashes,omitempty"`
	LeaderPubKey         *Point   `protobuf:"bytes,9,opt,name=leader_pub_key,json=leaderPubKey,proto3" json:"leader_pub_key,omitempty"`
	MinorPubKeys         []*Point `protobuf:"bytes,10,rep,name=minor_pub_keys,json=minorPubKeys,proto3" json:"minor_pub_keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockHeader) Reset()         { *m = BlockHeader{} }
func (m *BlockHeader) String() string { return proto.CompactTextString(m) }
func (*BlockHeader) ProtoMessage()    {}
func (*BlockHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_type_51e89bab3b0b6283, []int{9}
}
func (m *BlockHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockHeader.Unmarshal(m, b)
}
func (m *BlockHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockHeader.Marshal(b, m, deterministic)
}
func (dst *BlockHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockHeader.Merge(dst, src)
}
func (m *BlockHeader) XXX_Size() int {
	return xxx_messageInfo_BlockHeader.Size(m)
}
func (m *BlockHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockHeader.DiscardUnknown(m)
}

var xxx_messageInfo_BlockHeader proto.InternalMessageInfo

func (m *BlockHeader) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *BlockHeader) GetPreviousHash() []byte {
	if m != nil {
		return m.PreviousHash
	}
	return nil
}

func (m *BlockHeader) GetGasLimit() []byte {
	if m != nil {
		return m.GasLimit
	}
	return nil
}

func (m *BlockHeader) GetGasUsed() []byte {
	if m != nil {
		return m.GasUsed
	}
	return nil
}

func (m *BlockHeader) GetHeight() []byte {
	if m != nil {
		return m.Height
	}
	return nil
}

func (m *BlockHeader) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *BlockHeader) GetMerkleRoot() []byte {
	if m != nil {
		return m.MerkleRoot
	}
	return nil
}

func (m *BlockHeader) GetTxHashes() [][]byte {
	if m != nil {
		return m.TxHashes
	}
	return nil
}

func (m *BlockHeader) GetLeaderPubKey() *Point {
	if m != nil {
		return m.LeaderPubKey
	}
	return nil
}

func (m *BlockHeader) GetMinorPubKeys() []*Point {
	if m != nil {
		return m.MinorPubKeys
	}
	return nil
}

type BlockData struct {
	TxCount              int32          `protobuf:"varint,1,opt,name=tx_count,json=txCount,proto3" json:"tx_count,omitempty"`
	TxList               []*Transaction `protobuf:"bytes,2,rep,name=tx_list,json=txList,proto3" json:"tx_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *BlockData) Reset()         { *m = BlockData{} }
func (m *BlockData) String() string { return proto.CompactTextString(m) }
func (*BlockData) ProtoMessage()    {}
func (*BlockData) Descriptor() ([]byte, []int) {
	return fileDescriptor_type_51e89bab3b0b6283, []int{10}
}
func (m *BlockData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockData.Unmarshal(m, b)
}
func (m *BlockData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockData.Marshal(b, m, deterministic)
}
func (dst *BlockData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockData.Merge(dst, src)
}
func (m *BlockData) XXX_Size() int {
	return xxx_messageInfo_BlockData.Size(m)
}
func (m *BlockData) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockData.DiscardUnknown(m)
}

var xxx_messageInfo_BlockData proto.InternalMessageInfo

func (m *BlockData) GetTxCount() int32 {
	if m != nil {
		return m.TxCount
	}
	return 0
}

func (m *BlockData) GetTxList() []*Transaction {
	if m != nil {
		return m.TxList
	}
	return nil
}

type Block struct {
	Header               *BlockHeader `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	Data                 *BlockData   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	MultiSig             *Signature   `protobuf:"bytes,4,opt,name=multi_sig,json=multiSig,proto3" json:"multi_sig,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_type_51e89bab3b0b6283, []int{11}
}
func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (dst *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(dst, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetHeader() *BlockHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Block) GetData() *BlockData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Block) GetMultiSig() *Signature {
	if m != nil {
		return m.MultiSig
	}
	return nil
}

type Transaction struct {
	Version              int32      `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Nonce                int64      `protobuf:"varint,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	ToAddress            []byte     `protobuf:"bytes,3,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	Amount               []byte     `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	GasPrice             []byte     `protobuf:"bytes,5,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
	GasLimit             []byte     `protobuf:"bytes,6,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	Timestamp            int64      `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	PubKey               *Point     `protobuf:"bytes,8,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	Sig                  *Signature `protobuf:"bytes,9,opt,name=sig,proto3" json:"sig,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_type_51e89bab3b0b6283, []int{12}
}
func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (dst *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(dst, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Transaction) GetNonce() int64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *Transaction) GetToAddress() []byte {
	if m != nil {
		return m.ToAddress
	}
	return nil
}

func (m *Transaction) GetAmount() []byte {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *Transaction) GetGasPrice() []byte {
	if m != nil {
		return m.GasPrice
	}
	return nil
}

func (m *Transaction) GetGasLimit() []byte {
	if m != nil {
		return m.GasLimit
	}
	return nil
}

func (m *Transaction) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Transaction) GetPubKey() *Point {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func (m *Transaction) GetSig() *Signature {
	if m != nil {
		return m.Sig
	}
	return nil
}

type Account struct {
	PrvKey               *PrivateKey `protobuf:"bytes,1,opt,name=prv_key,json=prvKey,proto3" json:"prv_key,omitempty"`
	Address              []byte      `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Balance              []byte      `protobuf:"bytes,3,opt,name=balance,proto3" json:"balance,omitempty"`
	TxCount              int64       `protobuf:"varint,4,opt,name=tx_count,json=txCount,proto3" json:"tx_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Account) Reset()         { *m = Account{} }
func (m *Account) String() string { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()    {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_type_51e89bab3b0b6283, []int{13}
}
func (m *Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account.Unmarshal(m, b)
}
func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account.Marshal(b, m, deterministic)
}
func (dst *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(dst, src)
}
func (m *Account) XXX_Size() int {
	return xxx_messageInfo_Account.Size(m)
}
func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}

var xxx_messageInfo_Account proto.InternalMessageInfo

func (m *Account) GetPrvKey() *PrivateKey {
	if m != nil {
		return m.PrvKey
	}
	return nil
}

func (m *Account) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Account) GetBalance() []byte {
	if m != nil {
		return m.Balance
	}
	return nil
}

func (m *Account) GetTxCount() int64 {
	if m != nil {
		return m.TxCount
	}
	return 0
}

func init() {
	proto.RegisterType((*Serializable)(nil), "common.serializable")
	proto.RegisterType((*Point)(nil), "common.point")
	proto.RegisterType((*PrivateKey)(nil), "common.private_key")
	proto.RegisterType((*Signature)(nil), "common.signature")
	proto.RegisterType((*Word)(nil), "common.word")
	proto.RegisterType((*Ticket)(nil), "common.ticket")
	proto.RegisterType((*Commitment)(nil), "common.commitment")
	proto.RegisterType((*Challenge)(nil), "common.challenge")
	proto.RegisterType((*Response)(nil), "common.response")
	proto.RegisterType((*BlockHeader)(nil), "common.block_header")
	proto.RegisterType((*BlockData)(nil), "common.block_data")
	proto.RegisterType((*Block)(nil), "common.block")
	proto.RegisterType((*Transaction)(nil), "common.transaction")
	proto.RegisterType((*Account)(nil), "common.account")
	proto.RegisterEnum("common.MessageHeader", MessageHeader_name, MessageHeader_value)
}

func init() { proto.RegisterFile("type.proto", fileDescriptor_type_51e89bab3b0b6283) }

var fileDescriptor_type_51e89bab3b0b6283 = []byte{
	// 940 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x55, 0xd1, 0x6e, 0xdb, 0x36,
	0x14, 0x9d, 0x62, 0x5b, 0xb2, 0xae, 0x9d, 0x4c, 0xe3, 0x8a, 0x42, 0x43, 0x37, 0x2c, 0x50, 0x80,
	0x2c, 0x18, 0x8a, 0x00, 0x4d, 0x7e, 0x60, 0x9a, 0x23, 0x24, 0x46, 0x12, 0xdb, 0x95, 0x95, 0x15,
	0x7b, 0x12, 0x68, 0x99, 0x95, 0x89, 0x48, 0xa2, 0x4a, 0xd2, 0x9e, 0xbd, 0x0f, 0xd8, 0xdb, 0x3e,
	0x60, 0x7f, 0xb6, 0xf7, 0xfd, 0xc8, 0x40, 0x4a, 0x72, 0xed, 0x22, 0x0d, 0xfa, 0xa6, 0xc3, 0x7b,
	0x78, 0xef, 0xe5, 0xb9, 0x87, 0x14, 0x80, 0xdc, 0x94, 0xe4, 0xbc, 0xe4, 0x4c, 0x32, 0x64, 0x26,
	0x2c, 0xcf, 0x59, 0xe1, 0x85, 0xd0, 0x17, 0x84, 0x53, 0x9c, 0xd1, 0x3f, 0xf1, 0x2c, 0x23, 0xe8,
	0x1c, 0xcc, 0x05, 0xc1, 0x73, 0xc2, 0x5d, 0xe3, 0xd8, 0x38, 0x3b, 0xba, 0x78, 0x79, 0x5e, 0x11,
	0xcf, 0x73, 0x22, 0x04, 0x4e, 0x49, 0x5c, 0x45, 0xc3, 0x9a, 0x85, 0x10, 0xb4, 0x67, 0x6c, 0xbe,
	0x71, 0x0f, 0x8e, 0x8d, 0xb3, 0x7e, 0xa8, 0xbf, 0xbd, 0x13, 0xe8, 0x94, 0x8c, 0x16, 0x12, 0xf5,
	0xc1, 0x58, 0xeb, 0x3c, 0xfd, 0xd0, 0x58, 0x2b, 0xd4, 0xf0, 0x8c, 0x8d, 0x77, 0x0d, 0xbd, 0x92,
	0xd3, 0x15, 0x96, 0x24, 0x7e, 0x24, 0x1b, 0xe4, 0x40, 0xab, 0xe4, 0xab, 0x9a, 0xac, 0x3e, 0xd1,
	0x29, 0x58, 0xe5, 0x72, 0xa6, 0x82, 0x7a, 0x53, 0xef, 0xe2, 0xb0, 0x69, 0x45, 0x27, 0x0f, 0xcd,
	0x72, 0x39, 0xbb, 0x25, 0x1b, 0xef, 0x27, 0xb0, 0x05, 0x4d, 0x0b, 0x2c, 0x97, 0x9c, 0xa8, 0x1a,
	0xbc, 0xa9, 0xc8, 0x15, 0x12, 0x4d, 0x45, 0xe1, 0xb9, 0xd0, 0xfe, 0x83, 0xf1, 0xb9, 0x2a, 0x95,
	0x8b, 0xb4, 0x29, 0x95, 0x8b, 0xd4, 0x4b, 0xc0, 0x94, 0x34, 0x79, 0x24, 0x72, 0xb7, 0xa8, 0xf1,
	0x4c, 0x51, 0xf4, 0x06, 0x7a, 0x82, 0xa6, 0x31, 0x7b, 0x1f, 0xab, 0x94, 0x75, 0x83, 0xdf, 0x34,
	0xdc, 0x6d, 0x3f, 0xa1, 0x6a, 0x6d, 0xfc, 0xfe, 0x1d, 0xe3, 0x73, 0xef, 0x2d, 0x80, 0x0a, 0x53,
	0x99, 0x93, 0xe2, 0xcb, 0x0b, 0xbd, 0x02, 0xe3, 0xc3, 0xd3, 0xe7, 0x37, 0x3e, 0x78, 0x7f, 0x19,
	0x60, 0x27, 0x0b, 0x9c, 0x65, 0xa4, 0x48, 0x09, 0x7a, 0x03, 0x87, 0x29, 0x67, 0xcb, 0x32, 0x7e,
	0x36, 0x71, 0x4f, 0x73, 0x26, 0x55, 0xf6, 0x53, 0xb0, 0xaa, 0x2d, 0x9f, 0xa9, 0x61, 0xea, 0xe8,
	0xdb, 0x46, 0xb2, 0xd6, 0x56, 0xb2, 0x4a, 0xe8, 0x76, 0x2d, 0xb4, 0xf7, 0x0b, 0x74, 0x39, 0x11,
	0x25, 0x2b, 0x04, 0xf9, 0xe2, 0x93, 0xed, 0x0f, 0xe7, 0xbf, 0x03, 0xe8, 0xcf, 0x32, 0x96, 0x3c,
	0xd6, 0x06, 0x43, 0x2e, 0x58, 0x2b, 0xc2, 0x05, 0x65, 0x85, 0x4e, 0xd3, 0x09, 0x1b, 0x88, 0x4e,
	0xe0, 0xb0, 0xe4, 0x64, 0x45, 0xd9, 0x52, 0xc4, 0x0b, 0x2c, 0x16, 0x75, 0x92, 0x7e, 0xb3, 0x78,
	0x83, 0xc5, 0x02, 0xbd, 0x02, 0x3b, 0xc5, 0x22, 0xce, 0x68, 0x4e, 0x65, 0xdd, 0x77, 0x37, 0xc5,
	0xe2, 0x4e, 0x61, 0xf4, 0x1d, 0xa8, 0xef, 0x78, 0x29, 0xc8, 0xbc, 0x3e, 0x83, 0x95, 0x62, 0xf1,
	0x20, 0xc8, 0x1c, 0xbd, 0x54, 0xfe, 0xa7, 0xe9, 0x42, 0xba, 0x1d, 0x1d, 0xa8, 0x11, 0xfa, 0x1e,
	0x6c, 0x49, 0x73, 0x22, 0x24, 0xce, 0x4b, 0xd7, 0x3c, 0x36, 0xce, 0x5a, 0xe1, 0xc7, 0x05, 0xf4,
	0x23, 0xf4, 0x72, 0xc2, 0x1f, 0x33, 0x12, 0x73, 0xc6, 0xa4, 0x6b, 0xe9, 0xad, 0x50, 0x2d, 0x85,
	0x8c, 0x49, 0xd5, 0x8e, 0x5c, 0xeb, 0x6e, 0x89, 0x70, 0xbb, 0xc7, 0x2d, 0xd5, 0x8e, 0x5c, 0xdf,
	0x68, 0x8c, 0x2e, 0xe1, 0x28, 0xd3, 0x87, 0xde, 0x4e, 0xce, 0x7e, 0x4a, 0xb8, 0x7e, 0x45, 0xaa,
	0x47, 0x77, 0x09, 0x47, 0x39, 0x2d, 0xd8, 0x76, 0x8f, 0x70, 0xe1, 0xb8, 0xf5, 0xc4, 0x26, 0x4d,
	0xaa, 0xf6, 0x08, 0xef, 0x01, 0xa0, 0x12, 0x79, 0x8e, 0x25, 0x56, 0x32, 0xc8, 0x75, 0x9c, 0xb0,
	0x65, 0x21, 0x1b, 0x8d, 0xe5, 0x7a, 0xa0, 0x20, 0x7a, 0x0d, 0x96, 0x5c, 0xc7, 0x19, 0x15, 0xd2,
	0x3d, 0xd0, 0x69, 0xbf, 0x6d, 0xd2, 0x4a, 0x8e, 0x0b, 0x81, 0x13, 0x49, 0x59, 0x11, 0x9a, 0x72,
	0x7d, 0x47, 0x85, 0xf4, 0xfe, 0x36, 0xa0, 0xa3, 0xf3, 0xa2, 0xd7, 0xdb, 0xe7, 0xa3, 0xf2, 0xd3,
	0x8b, 0x66, 0xdb, 0xee, 0x6c, 0xb7, 0x8f, 0xc7, 0x29, 0xb4, 0x55, 0x23, 0x7a, 0x3e, 0xbd, 0x0b,
	0xb4, 0xcf, 0x55, 0x91, 0x50, 0xc7, 0xd1, 0x39, 0xd8, 0xf9, 0x32, 0x93, 0x34, 0x16, 0x34, 0xd5,
	0x03, 0x7b, 0xf2, 0xae, 0x75, 0x35, 0x67, 0x4a, 0x53, 0xef, 0x9f, 0x03, 0xe8, 0xed, 0xf4, 0xf9,
	0x8c, 0x97, 0x5e, 0x40, 0xa7, 0x60, 0x45, 0x42, 0x74, 0xbb, 0xad, 0xb0, 0x02, 0xe8, 0x07, 0x00,
	0xc9, 0x62, 0x3c, 0x9f, 0x73, 0x22, 0x44, 0xed, 0x1e, 0x5b, 0x32, 0xbf, 0x5a, 0x50, 0x1e, 0xc1,
	0xb9, 0x56, 0xad, 0x32, 0x4f, 0x8d, 0x1a, 0xcf, 0x95, 0x9c, 0x26, 0xa4, 0xb6, 0x8f, 0xf2, 0xd9,
	0x44, 0xe1, 0x7d, 0x43, 0x9a, 0x9f, 0x18, 0x72, 0xcf, 0x5d, 0xd6, 0xa7, 0xee, 0xda, 0xb9, 0x51,
	0xdd, 0xe7, 0x6e, 0xd4, 0x09, 0xb4, 0x94, 0x40, 0xf6, 0xe7, 0x04, 0x52, 0x51, 0xf5, 0x66, 0x58,
	0x38, 0x49, 0x9a, 0x29, 0x97, 0x7c, 0xb5, 0x73, 0x55, 0xb7, 0x53, 0xde, 0x79, 0x9a, 0x43, 0xb3,
	0xe4, 0x2b, 0x95, 0xde, 0x05, 0xab, 0x91, 0xa4, 0xba, 0x71, 0x0d, 0x54, 0x91, 0x19, 0xce, 0xb0,
	0xd2, 0xb1, 0x12, 0xab, 0x81, 0x7b, 0x16, 0x6b, 0xeb, 0x73, 0x35, 0x16, 0xfb, 0xf9, 0x5f, 0x03,
	0x8e, 0xf6, 0x7f, 0x2a, 0xa8, 0x07, 0x96, 0x3f, 0x18, 0x8c, 0x1f, 0x46, 0x91, 0xf3, 0x15, 0x72,
	0xa0, 0xff, 0xeb, 0xdd, 0x78, 0x70, 0x1b, 0xdf, 0x04, 0xfe, 0x55, 0x10, 0x3a, 0x06, 0x3a, 0x02,
	0xa8, 0x56, 0xae, 0xfc, 0xc8, 0x77, 0x0e, 0x90, 0x0d, 0x1d, 0x8d, 0x9d, 0x16, 0xfa, 0x1a, 0x7a,
	0x51, 0xe8, 0x8f, 0xa6, 0xfe, 0x20, 0x1a, 0x8e, 0x47, 0x4e, 0x1b, 0x1d, 0x82, 0x1d, 0x0d, 0xef,
	0x83, 0x69, 0xe4, 0xdf, 0x4f, 0x9c, 0x8e, 0xa2, 0x4e, 0xc6, 0xc3, 0x51, 0xe4, 0x98, 0x8a, 0x3a,
	0x09, 0x87, 0xbf, 0xf9, 0x51, 0x10, 0xdf, 0x06, 0xbf, 0x3b, 0x96, 0xa2, 0x4e, 0x87, 0xd7, 0x23,
	0x3f, 0x7a, 0x08, 0x03, 0xa7, 0x8b, 0xba, 0xd0, 0x7e, 0x37, 0x0e, 0xaf, 0x1c, 0x1b, 0x01, 0x98,
	0xd1, 0x70, 0x70, 0x1b, 0x44, 0x0e, 0xa8, 0xda, 0x83, 0xf1, 0xfd, 0xfd, 0x30, 0xba, 0x0f, 0x46,
	0x91, 0xd3, 0x53, 0x9b, 0x06, 0x37, 0xfe, 0xdd, 0x5d, 0x30, 0xba, 0x0e, 0x9c, 0x3e, 0xea, 0x43,
	0x37, 0x0c, 0xa6, 0x93, 0xf1, 0x68, 0x1a, 0x38, 0x87, 0x33, 0x53, 0xff, 0x63, 0x2f, 0xff, 0x0f,
	0x00, 0x00, 0xff, 0xff, 0x53, 0x3c, 0x16, 0xc6, 0x71, 0x07, 0x00, 0x00,
}
