// Code generated by protoc-gen-go. DO NOT EDIT.
// source: type.proto

package common

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MessageHeader int32

const (
	MessageHeader_ACCOUNT          MessageHeader = 0
	MessageHeader_BLOCK_HEADER     MessageHeader = 1
	MessageHeader_BLOCK_DATA       MessageHeader = 2
	MessageHeader_BLOCK            MessageHeader = 3
	MessageHeader_TRANSACTION      MessageHeader = 4
	MessageHeader_TIMESTAMP        MessageHeader = 5
	MessageHeader_POINT            MessageHeader = 6
	MessageHeader_PRIVATE_KEY      MessageHeader = 7
	MessageHeader_SIGNATURE        MessageHeader = 8
	MessageHeader_WORD             MessageHeader = 9
	MessageHeader_TICKET           MessageHeader = 10
	MessageHeader_COMMITMENT       MessageHeader = 11
	MessageHeader_CHALLENGE        MessageHeader = 12
	MessageHeader_RESPONSE         MessageHeader = 13
	MessageHeader_TRANSACTION_DATA MessageHeader = 14
)

var MessageHeader_name = map[int32]string{
	0:  "ACCOUNT",
	1:  "BLOCK_HEADER",
	2:  "BLOCK_DATA",
	3:  "BLOCK",
	4:  "TRANSACTION",
	5:  "TIMESTAMP",
	6:  "POINT",
	7:  "PRIVATE_KEY",
	8:  "SIGNATURE",
	9:  "WORD",
	10: "TICKET",
	11: "COMMITMENT",
	12: "CHALLENGE",
	13: "RESPONSE",
	14: "TRANSACTION_DATA",
}
var MessageHeader_value = map[string]int32{
	"ACCOUNT":          0,
	"BLOCK_HEADER":     1,
	"BLOCK_DATA":       2,
	"BLOCK":            3,
	"TRANSACTION":      4,
	"TIMESTAMP":        5,
	"POINT":            6,
	"PRIVATE_KEY":      7,
	"SIGNATURE":        8,
	"WORD":             9,
	"TICKET":           10,
	"COMMITMENT":       11,
	"CHALLENGE":        12,
	"RESPONSE":         13,
	"TRANSACTION_DATA": 14,
}

func (x MessageHeader) String() string {
	return proto.EnumName(MessageHeader_name, int32(x))
}
func (MessageHeader) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_type_7609990ac7512d40, []int{0}
}

type Serializable struct {
	Header               MessageHeader `protobuf:"varint,1,opt,name=header,proto3,enum=common.MessageHeader" json:"header,omitempty"`
	Body                 []byte        `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Address              string        `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	PubKey               *Point        `protobuf:"bytes,4,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	Sig                  *Signature    `protobuf:"bytes,5,opt,name=sig,proto3" json:"sig,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Serializable) Reset()         { *m = Serializable{} }
func (m *Serializable) String() string { return proto.CompactTextString(m) }
func (*Serializable) ProtoMessage()    {}
func (*Serializable) Descriptor() ([]byte, []int) {
	return fileDescriptor_type_7609990ac7512d40, []int{0}
}
func (m *Serializable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Serializable.Unmarshal(m, b)
}
func (m *Serializable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Serializable.Marshal(b, m, deterministic)
}
func (dst *Serializable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Serializable.Merge(dst, src)
}
func (m *Serializable) XXX_Size() int {
	return xxx_messageInfo_Serializable.Size(m)
}
func (m *Serializable) XXX_DiscardUnknown() {
	xxx_messageInfo_Serializable.DiscardUnknown(m)
}

var xxx_messageInfo_Serializable proto.InternalMessageInfo

func (m *Serializable) GetHeader() MessageHeader {
	if m != nil {
		return m.Header
	}
	return MessageHeader_ACCOUNT
}

func (m *Serializable) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *Serializable) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Serializable) GetPubKey() *Point {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func (m *Serializable) GetSig() *Signature {
	if m != nil {
		return m.Sig
	}
	return nil
}

type Point struct {
	X                    []byte   `protobuf:"bytes,1,opt,name=x,proto3" json:"x,omitempty"`
	Y                    []byte   `protobuf:"bytes,2,opt,name=y,proto3" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Point) Reset()         { *m = Point{} }
func (m *Point) String() string { return proto.CompactTextString(m) }
func (*Point) ProtoMessage()    {}
func (*Point) Descriptor() ([]byte, []int) {
	return fileDescriptor_type_7609990ac7512d40, []int{1}
}
func (m *Point) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Point.Unmarshal(m, b)
}
func (m *Point) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Point.Marshal(b, m, deterministic)
}
func (dst *Point) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Point.Merge(dst, src)
}
func (m *Point) XXX_Size() int {
	return xxx_messageInfo_Point.Size(m)
}
func (m *Point) XXX_DiscardUnknown() {
	xxx_messageInfo_Point.DiscardUnknown(m)
}

var xxx_messageInfo_Point proto.InternalMessageInfo

func (m *Point) GetX() []byte {
	if m != nil {
		return m.X
	}
	return nil
}

func (m *Point) GetY() []byte {
	if m != nil {
		return m.Y
	}
	return nil
}

type PrivateKey struct {
	Prv                  []byte   `protobuf:"bytes,1,opt,name=prv,proto3" json:"prv,omitempty"`
	PubKey               *Point   `protobuf:"bytes,2,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrivateKey) Reset()         { *m = PrivateKey{} }
func (m *PrivateKey) String() string { return proto.CompactTextString(m) }
func (*PrivateKey) ProtoMessage()    {}
func (*PrivateKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_type_7609990ac7512d40, []int{2}
}
func (m *PrivateKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrivateKey.Unmarshal(m, b)
}
func (m *PrivateKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrivateKey.Marshal(b, m, deterministic)
}
func (dst *PrivateKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrivateKey.Merge(dst, src)
}
func (m *PrivateKey) XXX_Size() int {
	return xxx_messageInfo_PrivateKey.Size(m)
}
func (m *PrivateKey) XXX_DiscardUnknown() {
	xxx_messageInfo_PrivateKey.DiscardUnknown(m)
}

var xxx_messageInfo_PrivateKey proto.InternalMessageInfo

func (m *PrivateKey) GetPrv() []byte {
	if m != nil {
		return m.Prv
	}
	return nil
}

func (m *PrivateKey) GetPubKey() *Point {
	if m != nil {
		return m.PubKey
	}
	return nil
}

type Signature struct {
	R                    []byte   `protobuf:"bytes,1,opt,name=r,proto3" json:"r,omitempty"`
	S                    []byte   `protobuf:"bytes,2,opt,name=s,proto3" json:"s,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Signature) Reset()         { *m = Signature{} }
func (m *Signature) String() string { return proto.CompactTextString(m) }
func (*Signature) ProtoMessage()    {}
func (*Signature) Descriptor() ([]byte, []int) {
	return fileDescriptor_type_7609990ac7512d40, []int{3}
}
func (m *Signature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Signature.Unmarshal(m, b)
}
func (m *Signature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Signature.Marshal(b, m, deterministic)
}
func (dst *Signature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Signature.Merge(dst, src)
}
func (m *Signature) XXX_Size() int {
	return xxx_messageInfo_Signature.Size(m)
}
func (m *Signature) XXX_DiscardUnknown() {
	xxx_messageInfo_Signature.DiscardUnknown(m)
}

var xxx_messageInfo_Signature proto.InternalMessageInfo

func (m *Signature) GetR() []byte {
	if m != nil {
		return m.R
	}
	return nil
}

func (m *Signature) GetS() []byte {
	if m != nil {
		return m.S
	}
	return nil
}

type Word struct {
	Msg                  []byte   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Word) Reset()         { *m = Word{} }
func (m *Word) String() string { return proto.CompactTextString(m) }
func (*Word) ProtoMessage()    {}
func (*Word) Descriptor() ([]byte, []int) {
	return fileDescriptor_type_7609990ac7512d40, []int{4}
}
func (m *Word) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Word.Unmarshal(m, b)
}
func (m *Word) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Word.Marshal(b, m, deterministic)
}
func (dst *Word) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Word.Merge(dst, src)
}
func (m *Word) XXX_Size() int {
	return xxx_messageInfo_Word.Size(m)
}
func (m *Word) XXX_DiscardUnknown() {
	xxx_messageInfo_Word.DiscardUnknown(m)
}

var xxx_messageInfo_Word proto.InternalMessageInfo

func (m *Word) GetMsg() []byte {
	if m != nil {
		return m.Msg
	}
	return nil
}

type Ticket struct {
	SigOfWord            *Signature `protobuf:"bytes,1,opt,name=sig_of_word,json=sigOfWord,proto3" json:"sig_of_word,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Ticket) Reset()         { *m = Ticket{} }
func (m *Ticket) String() string { return proto.CompactTextString(m) }
func (*Ticket) ProtoMessage()    {}
func (*Ticket) Descriptor() ([]byte, []int) {
	return fileDescriptor_type_7609990ac7512d40, []int{5}
}
func (m *Ticket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ticket.Unmarshal(m, b)
}
func (m *Ticket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ticket.Marshal(b, m, deterministic)
}
func (dst *Ticket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ticket.Merge(dst, src)
}
func (m *Ticket) XXX_Size() int {
	return xxx_messageInfo_Ticket.Size(m)
}
func (m *Ticket) XXX_DiscardUnknown() {
	xxx_messageInfo_Ticket.DiscardUnknown(m)
}

var xxx_messageInfo_Ticket proto.InternalMessageInfo

func (m *Ticket) GetSigOfWord() *Signature {
	if m != nil {
		return m.SigOfWord
	}
	return nil
}

type Commitment struct {
	Q                    *Point   `protobuf:"bytes,1,opt,name=q,proto3" json:"q,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Commitment) Reset()         { *m = Commitment{} }
func (m *Commitment) String() string { return proto.CompactTextString(m) }
func (*Commitment) ProtoMessage()    {}
func (*Commitment) Descriptor() ([]byte, []int) {
	return fileDescriptor_type_7609990ac7512d40, []int{6}
}
func (m *Commitment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Commitment.Unmarshal(m, b)
}
func (m *Commitment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Commitment.Marshal(b, m, deterministic)
}
func (dst *Commitment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Commitment.Merge(dst, src)
}
func (m *Commitment) XXX_Size() int {
	return xxx_messageInfo_Commitment.Size(m)
}
func (m *Commitment) XXX_DiscardUnknown() {
	xxx_messageInfo_Commitment.DiscardUnknown(m)
}

var xxx_messageInfo_Commitment proto.InternalMessageInfo

func (m *Commitment) GetQ() *Point {
	if m != nil {
		return m.Q
	}
	return nil
}

type Challenge struct {
	GroupPubKey          *Point   `protobuf:"bytes,1,opt,name=group_pub_key,json=groupPubKey,proto3" json:"group_pub_key,omitempty"`
	GroupQ               *Point   `protobuf:"bytes,2,opt,name=group_q,json=groupQ,proto3" json:"group_q,omitempty"`
	Msg                  []byte   `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	R                    []byte   `protobuf:"bytes,4,opt,name=r,proto3" json:"r,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Challenge) Reset()         { *m = Challenge{} }
func (m *Challenge) String() string { return proto.CompactTextString(m) }
func (*Challenge) ProtoMessage()    {}
func (*Challenge) Descriptor() ([]byte, []int) {
	return fileDescriptor_type_7609990ac7512d40, []int{7}
}
func (m *Challenge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Challenge.Unmarshal(m, b)
}
func (m *Challenge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Challenge.Marshal(b, m, deterministic)
}
func (dst *Challenge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Challenge.Merge(dst, src)
}
func (m *Challenge) XXX_Size() int {
	return xxx_messageInfo_Challenge.Size(m)
}
func (m *Challenge) XXX_DiscardUnknown() {
	xxx_messageInfo_Challenge.DiscardUnknown(m)
}

var xxx_messageInfo_Challenge proto.InternalMessageInfo

func (m *Challenge) GetGroupPubKey() *Point {
	if m != nil {
		return m.GroupPubKey
	}
	return nil
}

func (m *Challenge) GetGroupQ() *Point {
	if m != nil {
		return m.GroupQ
	}
	return nil
}

func (m *Challenge) GetMsg() []byte {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *Challenge) GetR() []byte {
	if m != nil {
		return m.R
	}
	return nil
}

type Response struct {
	S                    []byte   `protobuf:"bytes,1,opt,name=s,proto3" json:"s,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_type_7609990ac7512d40, []int{8}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetS() []byte {
	if m != nil {
		return m.S
	}
	return nil
}

type BlockHeadertttt struct {
	Version              int32    `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	PreviousHash         []byte   `protobuf:"bytes,2,opt,name=previous_hash,json=previousHash,proto3" json:"previous_hash,omitempty"`
	GasLimit             []byte   `protobuf:"bytes,3,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	GasUsed              []byte   `protobuf:"bytes,4,opt,name=gas_used,json=gasUsed,proto3" json:"gas_used,omitempty"`
	Height               []byte   `protobuf:"bytes,5,opt,name=height,proto3" json:"height,omitempty"`
	Timestamp            int64    `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	MerkleRoot           []byte   `protobuf:"bytes,7,opt,name=merkle_root,json=merkleRoot,proto3" json:"merkle_root,omitempty"`
	TxHashes             [][]byte `protobuf:"bytes,8,rep,name=tx_hashes,json=txHashes,proto3" json:"tx_hashes,omitempty"`
	LeaderPubKey         *Point   `protobuf:"bytes,9,opt,name=leader_pub_key,json=leaderPubKey,proto3" json:"leader_pub_key,omitempty"`
	MinorPubKeys         []*Point `protobuf:"bytes,10,rep,name=minor_pub_keys,json=minorPubKeys,proto3" json:"minor_pub_keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockHeadertttt) Reset()         { *m = BlockHeadertttt{} }
func (m *BlockHeadertttt) String() string { return proto.CompactTextString(m) }
func (*BlockHeadertttt) ProtoMessage()    {}
func (*BlockHeadertttt) Descriptor() ([]byte, []int) {
	return fileDescriptor_type_7609990ac7512d40, []int{9}
}
func (m *BlockHeadertttt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockHeadertttt.Unmarshal(m, b)
}
func (m *BlockHeadertttt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockHeadertttt.Marshal(b, m, deterministic)
}
func (dst *BlockHeadertttt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockHeadertttt.Merge(dst, src)
}
func (m *BlockHeadertttt) XXX_Size() int {
	return xxx_messageInfo_BlockHeadertttt.Size(m)
}
func (m *BlockHeadertttt) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockHeadertttt.DiscardUnknown(m)
}

var xxx_messageInfo_BlockHeadertttt proto.InternalMessageInfo

func (m *BlockHeadertttt) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *BlockHeadertttt) GetPreviousHash() []byte {
	if m != nil {
		return m.PreviousHash
	}
	return nil
}

func (m *BlockHeadertttt) GetGasLimit() []byte {
	if m != nil {
		return m.GasLimit
	}
	return nil
}

func (m *BlockHeadertttt) GetGasUsed() []byte {
	if m != nil {
		return m.GasUsed
	}
	return nil
}

func (m *BlockHeadertttt) GetHeight() []byte {
	if m != nil {
		return m.Height
	}
	return nil
}

func (m *BlockHeadertttt) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *BlockHeadertttt) GetMerkleRoot() []byte {
	if m != nil {
		return m.MerkleRoot
	}
	return nil
}

func (m *BlockHeadertttt) GetTxHashes() [][]byte {
	if m != nil {
		return m.TxHashes
	}
	return nil
}

func (m *BlockHeadertttt) GetLeaderPubKey() *Point {
	if m != nil {
		return m.LeaderPubKey
	}
	return nil
}

func (m *BlockHeadertttt) GetMinorPubKeys() []*Point {
	if m != nil {
		return m.MinorPubKeys
	}
	return nil
}

type BlockDatatttt struct {
	TxCount              int32              `protobuf:"varint,1,opt,name=tx_count,json=txCount,proto3" json:"tx_count,omitempty"`
	TxList               []*Transactiontttt `protobuf:"bytes,2,rep,name=tx_list,json=txList,proto3" json:"tx_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *BlockDatatttt) Reset()         { *m = BlockDatatttt{} }
func (m *BlockDatatttt) String() string { return proto.CompactTextString(m) }
func (*BlockDatatttt) ProtoMessage()    {}
func (*BlockDatatttt) Descriptor() ([]byte, []int) {
	return fileDescriptor_type_7609990ac7512d40, []int{10}
}
func (m *BlockDatatttt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockDatatttt.Unmarshal(m, b)
}
func (m *BlockDatatttt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockDatatttt.Marshal(b, m, deterministic)
}
func (dst *BlockDatatttt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockDatatttt.Merge(dst, src)
}
func (m *BlockDatatttt) XXX_Size() int {
	return xxx_messageInfo_BlockDatatttt.Size(m)
}
func (m *BlockDatatttt) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockDatatttt.DiscardUnknown(m)
}

var xxx_messageInfo_BlockDatatttt proto.InternalMessageInfo

func (m *BlockDatatttt) GetTxCount() int32 {
	if m != nil {
		return m.TxCount
	}
	return 0
}

func (m *BlockDatatttt) GetTxList() []*Transactiontttt {
	if m != nil {
		return m.TxList
	}
	return nil
}

type Blocktttt struct {
	Header               *BlockHeadertttt `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	Data                 *BlockDatatttt   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	MultiSig             *Signature       `protobuf:"bytes,4,opt,name=multi_sig,json=multiSig,proto3" json:"multi_sig,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Blocktttt) Reset()         { *m = Blocktttt{} }
func (m *Blocktttt) String() string { return proto.CompactTextString(m) }
func (*Blocktttt) ProtoMessage()    {}
func (*Blocktttt) Descriptor() ([]byte, []int) {
	return fileDescriptor_type_7609990ac7512d40, []int{11}
}
func (m *Blocktttt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Blocktttt.Unmarshal(m, b)
}
func (m *Blocktttt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Blocktttt.Marshal(b, m, deterministic)
}
func (dst *Blocktttt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Blocktttt.Merge(dst, src)
}
func (m *Blocktttt) XXX_Size() int {
	return xxx_messageInfo_Blocktttt.Size(m)
}
func (m *Blocktttt) XXX_DiscardUnknown() {
	xxx_messageInfo_Blocktttt.DiscardUnknown(m)
}

var xxx_messageInfo_Blocktttt proto.InternalMessageInfo

func (m *Blocktttt) GetHeader() *BlockHeadertttt {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Blocktttt) GetData() *BlockDatatttt {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Blocktttt) GetMultiSig() *Signature {
	if m != nil {
		return m.MultiSig
	}
	return nil
}

type TransactionData struct {
	Version              int32    `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Nonce                int64    `protobuf:"varint,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	ToAddress            []byte   `protobuf:"bytes,3,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	Amount               []byte   `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	GasPrice             []byte   `protobuf:"bytes,5,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
	GasLimit             []byte   `protobuf:"bytes,6,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	Timestamp            int64    `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	PubKey               *Point   `protobuf:"bytes,8,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransactionData) Reset()         { *m = TransactionData{} }
func (m *TransactionData) String() string { return proto.CompactTextString(m) }
func (*TransactionData) ProtoMessage()    {}
func (*TransactionData) Descriptor() ([]byte, []int) {
	return fileDescriptor_type_7609990ac7512d40, []int{12}
}
func (m *TransactionData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionData.Unmarshal(m, b)
}
func (m *TransactionData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionData.Marshal(b, m, deterministic)
}
func (dst *TransactionData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionData.Merge(dst, src)
}
func (m *TransactionData) XXX_Size() int {
	return xxx_messageInfo_TransactionData.Size(m)
}
func (m *TransactionData) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionData.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionData proto.InternalMessageInfo

func (m *TransactionData) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *TransactionData) GetNonce() int64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *TransactionData) GetToAddress() []byte {
	if m != nil {
		return m.ToAddress
	}
	return nil
}

func (m *TransactionData) GetAmount() []byte {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *TransactionData) GetGasPrice() []byte {
	if m != nil {
		return m.GasPrice
	}
	return nil
}

func (m *TransactionData) GetGasLimit() []byte {
	if m != nil {
		return m.GasLimit
	}
	return nil
}

func (m *TransactionData) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *TransactionData) GetPubKey() *Point {
	if m != nil {
		return m.PubKey
	}
	return nil
}

type Transactiontttt struct {
	Data                 *TransactionData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Sig                  *Signature       `protobuf:"bytes,2,opt,name=sig,proto3" json:"sig,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Transactiontttt) Reset()         { *m = Transactiontttt{} }
func (m *Transactiontttt) String() string { return proto.CompactTextString(m) }
func (*Transactiontttt) ProtoMessage()    {}
func (*Transactiontttt) Descriptor() ([]byte, []int) {
	return fileDescriptor_type_7609990ac7512d40, []int{13}
}
func (m *Transactiontttt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transactiontttt.Unmarshal(m, b)
}
func (m *Transactiontttt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transactiontttt.Marshal(b, m, deterministic)
}
func (dst *Transactiontttt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transactiontttt.Merge(dst, src)
}
func (m *Transactiontttt) XXX_Size() int {
	return xxx_messageInfo_Transactiontttt.Size(m)
}
func (m *Transactiontttt) XXX_DiscardUnknown() {
	xxx_messageInfo_Transactiontttt.DiscardUnknown(m)
}

var xxx_messageInfo_Transactiontttt proto.InternalMessageInfo

func (m *Transactiontttt) GetData() *TransactionData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Transactiontttt) GetSig() *Signature {
	if m != nil {
		return m.Sig
	}
	return nil
}

type Account struct {
	PrvKey               *PrivateKey `protobuf:"bytes,1,opt,name=prv_key,json=prvKey,proto3" json:"prv_key,omitempty"`
	Address              []byte      `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Balance              []byte      `protobuf:"bytes,3,opt,name=balance,proto3" json:"balance,omitempty"`
	TxCount              int64       `protobuf:"varint,4,opt,name=tx_count,json=txCount,proto3" json:"tx_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Account) Reset()         { *m = Account{} }
func (m *Account) String() string { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()    {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_type_7609990ac7512d40, []int{14}
}
func (m *Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account.Unmarshal(m, b)
}
func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account.Marshal(b, m, deterministic)
}
func (dst *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(dst, src)
}
func (m *Account) XXX_Size() int {
	return xxx_messageInfo_Account.Size(m)
}
func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}

var xxx_messageInfo_Account proto.InternalMessageInfo

func (m *Account) GetPrvKey() *PrivateKey {
	if m != nil {
		return m.PrvKey
	}
	return nil
}

func (m *Account) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Account) GetBalance() []byte {
	if m != nil {
		return m.Balance
	}
	return nil
}

func (m *Account) GetTxCount() int64 {
	if m != nil {
		return m.TxCount
	}
	return 0
}

func init() {
	proto.RegisterType((*Serializable)(nil), "common.serializable")
	proto.RegisterType((*Point)(nil), "common.point")
	proto.RegisterType((*PrivateKey)(nil), "common.private_key")
	proto.RegisterType((*Signature)(nil), "common.signature")
	proto.RegisterType((*Word)(nil), "common.word")
	proto.RegisterType((*Ticket)(nil), "common.ticket")
	proto.RegisterType((*Commitment)(nil), "common.commitment")
	proto.RegisterType((*Challenge)(nil), "common.challenge")
	proto.RegisterType((*Response)(nil), "common.response")
	proto.RegisterType((*BlockHeadertttt)(nil), "common.block_headertttt")
	proto.RegisterType((*BlockDatatttt)(nil), "common.block_datatttt")
	proto.RegisterType((*Blocktttt)(nil), "common.blocktttt")
	proto.RegisterType((*TransactionData)(nil), "common.transaction_data")
	proto.RegisterType((*Transactiontttt)(nil), "common.transactiontttt")
	proto.RegisterType((*Account)(nil), "common.account")
	proto.RegisterEnum("common.MessageHeader", MessageHeader_name, MessageHeader_value)
}

func init() { proto.RegisterFile("type.proto", fileDescriptor_type_7609990ac7512d40) }

var fileDescriptor_type_7609990ac7512d40 = []byte{
	// 1008 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x55, 0xdd, 0x6e, 0xdb, 0x36,
	0x14, 0x9e, 0xfc, 0x23, 0x59, 0xc7, 0x8e, 0xab, 0x71, 0x45, 0xa6, 0xa2, 0x1b, 0x66, 0x28, 0x40,
	0x97, 0x15, 0x45, 0xd0, 0x36, 0x97, 0xbb, 0xd2, 0x1c, 0x21, 0x31, 0x92, 0xd8, 0x9e, 0xac, 0xac,
	0xd8, 0xc5, 0x20, 0xd0, 0x36, 0x2b, 0x13, 0x91, 0x44, 0x45, 0xa4, 0x3d, 0x67, 0x0f, 0xd0, 0x77,
	0xd8, 0xa3, 0xec, 0x89, 0x76, 0xb7, 0xfb, 0xdd, 0x15, 0xa4, 0x24, 0xc7, 0x36, 0xd2, 0xdc, 0xe9,
	0x90, 0xdf, 0xe1, 0xf9, 0xf8, 0x9d, 0x4f, 0x87, 0x00, 0xe2, 0x3e, 0x23, 0x27, 0x59, 0xce, 0x04,
	0x43, 0xfa, 0x8c, 0x25, 0x09, 0x4b, 0x9d, 0x7f, 0x34, 0xe8, 0x70, 0x92, 0x53, 0x1c, 0xd3, 0xbf,
	0xf0, 0x34, 0x26, 0xe8, 0x04, 0xf4, 0x05, 0xc1, 0x73, 0x92, 0xdb, 0x5a, 0x4f, 0x3b, 0xee, 0xbe,
	0x3f, 0x3c, 0x29, 0x90, 0x27, 0x09, 0xe1, 0x1c, 0x47, 0x24, 0x2c, 0x76, 0xfd, 0x12, 0x85, 0x10,
	0x34, 0xa6, 0x6c, 0x7e, 0x6f, 0xd7, 0x7a, 0xda, 0x71, 0xc7, 0x57, 0xdf, 0xc8, 0x06, 0x03, 0xcf,
	0xe7, 0x39, 0xe1, 0xdc, 0xae, 0xf7, 0xb4, 0x63, 0xd3, 0xaf, 0x42, 0xf4, 0x0a, 0x8c, 0x6c, 0x39,
	0x0d, 0x6f, 0xc9, 0xbd, 0xdd, 0xe8, 0x69, 0xc7, 0xed, 0xf7, 0x07, 0xd5, 0xf1, 0x19, 0xa3, 0xa9,
	0xf0, 0xf5, 0x6c, 0x39, 0xbd, 0x24, 0xf7, 0xe8, 0x08, 0xea, 0x9c, 0x46, 0x76, 0x53, 0x61, 0xbe,
	0xae, 0x30, 0x9c, 0x46, 0x29, 0x16, 0xcb, 0x9c, 0xf8, 0x72, 0xd7, 0x39, 0x82, 0xa6, 0xca, 0x42,
	0x1d, 0xd0, 0xd6, 0x8a, 0x6e, 0xc7, 0xd7, 0xd6, 0x32, 0xaa, 0xe8, 0x68, 0xf7, 0xce, 0x39, 0xb4,
	0xb3, 0x9c, 0xae, 0xb0, 0x20, 0xb2, 0x2a, 0xb2, 0xa0, 0x9e, 0xe5, 0xab, 0x12, 0x2c, 0x3f, 0xb7,
	0x29, 0xd5, 0x9e, 0xa0, 0xe4, 0xfc, 0x08, 0xe6, 0xa6, 0xbe, 0xac, 0x91, 0x57, 0x15, 0x73, 0x19,
	0xf1, 0xaa, 0x22, 0x77, 0x6c, 0x68, 0xfc, 0xc9, 0xf2, 0xb9, 0x2c, 0x95, 0xf0, 0xa8, 0x2a, 0x95,
	0xf0, 0xc8, 0xf9, 0x19, 0x74, 0x41, 0x67, 0xb7, 0x44, 0xa0, 0x77, 0xd0, 0xe6, 0x34, 0x0a, 0xd9,
	0xc7, 0x50, 0x42, 0x15, 0xe6, 0xd1, 0x7b, 0xca, 0x92, 0xa3, 0x8f, 0x1f, 0x58, 0x3e, 0x77, 0x7e,
	0x02, 0x90, 0xdb, 0x54, 0x24, 0x24, 0x15, 0xe8, 0x25, 0x68, 0x77, 0x65, 0xda, 0x1e, 0x5f, 0xed,
	0xce, 0xf9, 0xa4, 0x81, 0x39, 0x5b, 0xe0, 0x38, 0x26, 0x69, 0x44, 0xd0, 0x3b, 0x38, 0x88, 0x72,
	0xb6, 0xcc, 0xc2, 0xea, 0x9a, 0x8f, 0xa6, 0xb5, 0x15, 0x66, 0x5c, 0xc8, 0xff, 0x0a, 0x8c, 0x22,
	0xe5, 0xee, 0x0b, 0x9a, 0xa8, 0xdd, 0x5f, 0xab, 0x2b, 0xd6, 0x37, 0x57, 0x2c, 0x84, 0x69, 0x94,
	0xc2, 0x38, 0x36, 0xb4, 0x72, 0xc2, 0x33, 0x96, 0x72, 0x52, 0x88, 0xa4, 0x55, 0x22, 0xfd, 0x5b,
	0x03, 0x6b, 0x1a, 0xb3, 0xd9, 0x6d, 0xe9, 0x27, 0x21, 0x84, 0x90, 0xbe, 0x59, 0x91, 0x9c, 0x53,
	0x96, 0x2a, 0x60, 0xd3, 0xaf, 0x42, 0x74, 0x04, 0x07, 0x59, 0x4e, 0x56, 0x94, 0x2d, 0x79, 0xb8,
	0xc0, 0x7c, 0x51, 0xaa, 0xdd, 0xa9, 0x16, 0x2f, 0x30, 0x5f, 0xa0, 0x97, 0x60, 0x46, 0x98, 0x87,
	0x31, 0x4d, 0xa8, 0x28, 0x39, 0xb5, 0x22, 0xcc, 0xaf, 0x64, 0x8c, 0x5e, 0x80, 0xfc, 0x0e, 0x97,
	0x9c, 0xcc, 0x4b, 0x7e, 0x46, 0x84, 0xf9, 0x0d, 0x27, 0x73, 0x74, 0x28, 0x2d, 0x4f, 0xa3, 0x85,
	0x50, 0x7e, 0xeb, 0xf8, 0x65, 0x84, 0xbe, 0x03, 0x53, 0xd0, 0x84, 0x70, 0x81, 0x93, 0xcc, 0xd6,
	0x7b, 0xda, 0x71, 0xdd, 0x7f, 0x58, 0x40, 0x3f, 0x40, 0x3b, 0x21, 0xf9, 0x6d, 0x4c, 0xc2, 0x9c,
	0x31, 0x61, 0x1b, 0x2a, 0x15, 0x8a, 0x25, 0x9f, 0x31, 0xd9, 0x22, 0x53, 0xac, 0x15, 0x5b, 0xc2,
	0xed, 0x56, 0xaf, 0x2e, 0xe9, 0x88, 0xf5, 0x85, 0x8a, 0xd1, 0x29, 0x74, 0x63, 0x75, 0xf1, 0x4d,
	0x57, 0xcc, 0xc7, 0x84, 0xee, 0x14, 0xa0, 0xb2, 0x2d, 0xa7, 0xd0, 0x4d, 0x68, 0xca, 0x36, 0x39,
	0xdc, 0x86, 0x5e, 0xfd, 0x91, 0x24, 0x05, 0x2a, 0x72, 0xb8, 0xf3, 0x07, 0x74, 0x0b, 0xa1, 0xe7,
	0x58, 0x60, 0x25, 0xf3, 0x0b, 0x68, 0x89, 0x75, 0x38, 0x63, 0xcb, 0x54, 0x54, 0x3a, 0x8b, 0x75,
	0x5f, 0x86, 0xe8, 0x2d, 0x18, 0x62, 0x1d, 0xc6, 0x94, 0x0b, 0xbb, 0xa6, 0x8e, 0xfe, 0xb6, 0x3a,
	0x5a, 0xe4, 0x38, 0xe5, 0x78, 0x26, 0x28, 0x4b, 0xe5, 0x21, 0xbe, 0x2e, 0xd6, 0x57, 0x94, 0x0b,
	0xe7, 0x6f, 0x0d, 0x4c, 0x75, 0xbe, 0x3a, 0xfa, 0xed, 0x66, 0x7a, 0x14, 0xbe, 0xb1, 0xab, 0xf4,
	0xfd, 0x5e, 0x6f, 0xe6, 0xc7, 0x6b, 0x68, 0x48, 0x62, 0xaa, 0x5f, 0xed, 0x87, 0x69, 0xb3, 0x4b,
	0xd9, 0x57, 0x18, 0x74, 0x02, 0x66, 0xb2, 0x8c, 0x05, 0x0d, 0xe5, 0x6c, 0x68, 0x7c, 0xe9, 0x9f,
	0x69, 0x29, 0xcc, 0x84, 0x46, 0xce, 0xff, 0x1a, 0x58, 0x5b, 0xbc, 0xd5, 0x71, 0x4f, 0x98, 0xec,
	0x39, 0x34, 0x53, 0x96, 0xce, 0x88, 0xe2, 0x5e, 0xf7, 0x8b, 0x00, 0x7d, 0x0f, 0x20, 0x58, 0xb8,
	0x3d, 0xcf, 0x3a, 0xbe, 0x29, 0x98, 0x5b, 0x4e, 0xb4, 0x43, 0xd0, 0x71, 0xa2, 0xa4, 0x2c, 0x5c,
	0x55, 0x46, 0x95, 0x19, 0xb3, 0x9c, 0xce, 0x48, 0xe9, 0x2b, 0x69, 0xc0, 0xb1, 0x8c, 0x77, 0x9d,
	0xaa, 0xef, 0x39, 0x75, 0xc7, 0x76, 0xc6, 0xbe, 0xed, 0xb6, 0xc6, 0x55, 0xeb, 0xa9, 0x71, 0x35,
	0x87, 0x67, 0x7b, 0x2d, 0x43, 0x6f, 0x4a, 0xa9, 0xb5, 0xdd, 0xd6, 0xec, 0x2b, 0x54, 0x8a, 0x5d,
	0x8e, 0xe0, 0xda, 0x93, 0x23, 0xf8, 0x93, 0x06, 0x06, 0x9e, 0x29, 0x2b, 0xa1, 0x37, 0x60, 0x64,
	0xf9, 0x6a, 0x6b, 0xc2, 0x7c, 0xb3, 0x61, 0xf6, 0x30, 0x80, 0x7d, 0x3d, 0xcb, 0x57, 0xd2, 0xcb,
	0x5b, 0x6f, 0x44, 0xf1, 0x2f, 0x6f, 0xde, 0x08, 0x1b, 0x8c, 0x29, 0x8e, 0xb1, 0x6c, 0x44, 0xa1,
	0x76, 0x15, 0xee, 0x18, 0xb7, 0xa1, 0x84, 0xa9, 0x8c, 0xfb, 0xfa, 0x3f, 0x0d, 0xba, 0xbb, 0x2f,
	0x14, 0x6a, 0x83, 0xe1, 0xf6, 0xfb, 0xa3, 0x9b, 0x61, 0x60, 0x7d, 0x85, 0x2c, 0xe8, 0xfc, 0x72,
	0x35, 0xea, 0x5f, 0x86, 0x17, 0x9e, 0x7b, 0xe6, 0xf9, 0x96, 0x86, 0xba, 0x00, 0xc5, 0xca, 0x99,
	0x1b, 0xb8, 0x56, 0x0d, 0x99, 0xd0, 0x54, 0xb1, 0x55, 0x47, 0xcf, 0xa0, 0x1d, 0xf8, 0xee, 0x70,
	0xe2, 0xf6, 0x83, 0xc1, 0x68, 0x68, 0x35, 0xd0, 0x01, 0x98, 0xc1, 0xe0, 0xda, 0x9b, 0x04, 0xee,
	0xf5, 0xd8, 0x6a, 0x4a, 0xe8, 0x78, 0x34, 0x18, 0x06, 0x96, 0x2e, 0xa1, 0x63, 0x7f, 0xf0, 0x9b,
	0x1b, 0x78, 0xe1, 0xa5, 0xf7, 0xbb, 0x65, 0x48, 0xe8, 0x64, 0x70, 0x3e, 0x74, 0x83, 0x1b, 0xdf,
	0xb3, 0x5a, 0xa8, 0x05, 0x8d, 0x0f, 0x23, 0xff, 0xcc, 0x32, 0x11, 0x80, 0x1e, 0x0c, 0xfa, 0x97,
	0x5e, 0x60, 0x81, 0xac, 0xdd, 0x1f, 0x5d, 0x5f, 0x0f, 0x82, 0x6b, 0x6f, 0x18, 0x58, 0x6d, 0x99,
	0xd4, 0xbf, 0x70, 0xaf, 0xae, 0xbc, 0xe1, 0xb9, 0x67, 0x75, 0x50, 0x07, 0x5a, 0xbe, 0x37, 0x19,
	0x8f, 0x86, 0x13, 0xcf, 0x3a, 0x40, 0xcf, 0xc1, 0xda, 0x62, 0x53, 0xd0, 0xed, 0x4e, 0x75, 0xf5,
	0x8e, 0x9f, 0x7e, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x8b, 0x8b, 0xcd, 0xa7, 0xd5, 0x07, 0x00, 0x00,
}
